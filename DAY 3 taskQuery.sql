use day3;
-- SUBQUERY ---------------------------
select * 
from products as p, orders as o, customers as c
where O.O_ID = (
	SELECT P_ID FROM PRODUCTS AS P ); -- Error Code: 1242. Subquery returns more than 1 row
    -- WE DID NOT GIVE CONDITION IN SUBQUERY
    
select * 
from products as p, orders as o, customers as c
where O.O_ID = (
	SELECT P_ID FROM PRODUCTS AS P
    WHERE P.P_PRICE > AVG(P.P_PRICE)
); 
-- Error Code: 1111. Invalid use of group function
-- WE CAN'T ADD WHERE CONDITION INS SUBQUERY


SELECT * 
FROM PRODUCTS AS P
WHERE P.P_ID = (
	SELECT P_ID FROM PRODUCTS AS P
    WHERE P.P_ID = 2
);

SELECT AVG(P_PRICE) FROM PRODUCTS;

SELECT * 
FROM PRODUCTS AS P
WHERE P.P_ID = (
	SELECT AVG(P.P_PRICE) FROM PRODUCTS AS P
    WHERE P.P_ID = 2
);
-- O/P: NULL => NO PRODUCT HAS OF P_ID =2 HAS ABG(PRICE) AMT

SELECT * 
FROM PRODUCTS AS P
WHERE P.P_PRICE <= (
	SELECT AVG(P.P_PRICE) FROM PRODUCTS AS P
);

-- SUBQUERY WITH 2 TABLE---------------

SELECT * 
FROM ORDERS AS O, PRODUCTS AS P
WHERE P.P_ID =( 				
	SELECT P_ID FROM PRODUCTS AS P
    WHERE P.P_ID = 3
);

-- any/all

SELECT * 
FROM ORDERS AS O, PRODUCTS AS P
WHERE P.P_ID = ANY( 				
	SELECT P_ID FROM PRODUCTS AS P
    WHERE P.P_ID = 3
); 

-- EXISTS / NOT EXISTS

SELECT * 
FROM ORDERS AS O, PRODUCTS AS P
WHERE  EXISTS( 				
	SELECT P_ID FROM PRODUCTS AS P
    WHERE P.P_ID = 3
);

-- STRING FUNC: ASCII -----------
SELECT ascii(C_NAME) FROM CUSTOMERS;
SELECT upper(C_NAME) FROM CUSTOMERS;
SELECT LOWER(C_NAME) FROM CUSTOMERS;
SELECT substring(0,2),C_NAME FROM CUSTOMERS; -- WORKS From MySQL 4.0
SELECT REVERSE(C_NAME) FROM CUSTOMERS;
SELECT SYSDATE() AS DATE;
SELECT MONTHNAME('2024-10-26')AS DATE;
SELECT DAYNAME('2024-10-26')AS DATE;
SELECT YEARWEEK('2024-10-26')AS DATE;

